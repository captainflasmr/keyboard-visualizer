#+title: Change log of keyboard-visualizer
#+author: James Dyer
#+email: captainflasmr@gmail.com
#+language: en
#+options: ':t toc:nil author:nil email:nil num:nil title:nil
#+todo: TODO DOING | DONE
#+startup: showall

This document contains the release notes for each tagged commit on the
project's main git repository: [[https://github.com/captainflasmr/keyboard-visualizer]]

* Versions

** <2025-01-24>

Enhanced with natural language query commands and new features

- Added a `keyboard-visualizer-query-command-map` to map natural language queries to Emacs commands.
  - Examples: "open file" → `find-file`, "undo" → `undo`, "search" → `isearch-forward`, etc.
- Implemented a new command `keyboard-visualizer-learn-command-by-query`:
  - Allows users to search for commands via fuzzy queries and visualize their keybindings.
- Added `keyboard-visualizer-save-layout`:
  - Saves the current keyboard layout buffer to a file and opens it in a buffer.
- Modified key bindings in the shell menu:
  - Added `[j]` for searching commands via natural language queries.
  - Added `[s]` for saving the keyboard layout.
  - Removed `[l]` and deprecated learning mode toggle.

** <2025-01-24>

Enhance keyboard visualizer with learning mode and user interface improvements

- Added a new `keyboard-visualizer-learning-mode` to help users learn keybindings via random command prompts.
- Introduced new commands: 
  - `keyboard-visualizer-learning-step` for manual stepping through commands.
  - `keyboard-visualizer-learning-mode-toggle` to enable/disable learning mode.
  - `keyvis-menu` to provide an interactive menu for visualizer-related actions.
- Updated the keyboard layout to reflect more accurate key representations (e.g., renamed "RET" and "SPC").
- Improved documentation display within the keyboard visualizer buffer.
- Enhanced UI:
  - Used bold styling for section headers (e.g., "Description:").
  - Adjusted layout buffer display settings for better usability.
- Added customization options:
  - `keyboard-visualizer-learning-exclude-commands` to exclude certain commands from learning mode.
  - `keyboard-visualizer-monospace-face` face includes adjustable height.
- Various refactoring and bug fixes, such as filtering unnecessary characters from key descriptions.

* Testing

Developing locally and running through and evaluating elisp code.
